@inject HttpClient Http

@inject NavigationManager _navigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        @if (!userAuthenticated)
        {
            <a class="navbar-brand" href="">Welcome</a>
        }
        else
        {
            <a class="navbar-brand" href="">Welcome,@answer </a>
        }
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Create Notes
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Update Notes
            </NavLink>
        </div>
        @if (!userAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> SignIn
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="signup">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> SignUp
                </NavLink>
            </div>}
        @if (userAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="logoff">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> LogOff
                </NavLink>
            </div>}

            
    </nav>
</div>

@code{
    private bool userAuthenticated = false;
    private string answer = "";
    private string answer1 = "";
   
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Get,
                      "http://localhost:5085/api/Products/username");


            var response = await Http.SendAsync(request);
            answer = await response.Content.ReadAsStringAsync();
            if (answer == "false")
            {
                userAuthenticated = false;

            }
            else
            {

                userAuthenticated = true;
            }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Request error: {ex.Message}");
        }
    }
}